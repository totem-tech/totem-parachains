
//! Autogenerated weights for `pallet_proxy`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-02-13, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `ubuntu-s-8vcpu-16gb-fra1-01`, CPU: `DO-Regular`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/totem-parachain-collator
// benchmark
// pallet
// --chain=dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet=pallet_proxy
// --extrinsic=*
// --steps=50
// --repeat=20
// --json
// --output=./weights/pallet_proxy-new-test.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_proxy`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_proxy::WeightInfo for WeightInfo<T> {
	// Storage: Proxy Proxies (r:1 w:0)
	/// The range of component `p` is `[1, 31]`.
	fn proxy(p: u32, ) -> Weight {
		// Minimum execution time: 63_026 nanoseconds.
		Weight::from_ref_time(107_121_418)
			// Standard Error: 108_494
			.saturating_add(Weight::from_ref_time(62_920).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(1))
	}
	// Storage: Proxy Proxies (r:1 w:0)
	// Storage: Proxy Announcements (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: RandomnessCollectiveFlip RandomMaterial (r:1 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: unknown [0x3a65787472696e7369635f696e646578] (r:1 w:0)
	// Storage: Accounting PostingNumber (r:1 w:1)
	// Storage: Accounting BalanceByLedger (r:2 w:2)
	// Storage: Accounting GlobalLedger (r:2 w:2)
	// Storage: Accounting PostingDetail (r:0 w:2)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 31]`.
	fn proxy_announced(a: u32, p: u32, ) -> Weight {
		// Minimum execution time: 229_998 nanoseconds.
		Weight::from_ref_time(318_564_669)
			// Standard Error: 325_506
			.saturating_add(Weight::from_ref_time(909_531).saturating_mul(a.into()))
			// Standard Error: 336_312
			.saturating_add(Weight::from_ref_time(2_085_588).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(11))
			.saturating_add(T::DbWeight::get().writes(9))
	}
	// Storage: Proxy Announcements (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: RandomnessCollectiveFlip RandomMaterial (r:1 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: unknown [0x3a65787472696e7369635f696e646578] (r:1 w:0)
	// Storage: Accounting PostingNumber (r:1 w:1)
	// Storage: Accounting BalanceByLedger (r:2 w:2)
	// Storage: Accounting GlobalLedger (r:2 w:2)
	// Storage: Accounting PostingDetail (r:0 w:2)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 31]`.
	fn remove_announcement(a: u32, p: u32, ) -> Weight {
		// Minimum execution time: 198_479 nanoseconds.
		Weight::from_ref_time(209_030_766)
			// Standard Error: 269_080
			.saturating_add(Weight::from_ref_time(2_011_591).saturating_mul(a.into()))
			// Standard Error: 278_012
			.saturating_add(Weight::from_ref_time(1_912_057).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(10))
			.saturating_add(T::DbWeight::get().writes(9))
	}
	// Storage: Proxy Announcements (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: RandomnessCollectiveFlip RandomMaterial (r:1 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: unknown [0x3a65787472696e7369635f696e646578] (r:1 w:0)
	// Storage: Accounting PostingNumber (r:1 w:1)
	// Storage: Accounting BalanceByLedger (r:2 w:2)
	// Storage: Accounting GlobalLedger (r:2 w:2)
	// Storage: Accounting PostingDetail (r:0 w:2)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 31]`.
	fn reject_announcement(_a: u32, _p: u32, ) -> Weight {
		// Minimum execution time: 199_030 nanoseconds.
		Weight::from_ref_time(343_859_161)
			.saturating_add(T::DbWeight::get().reads(10))
			.saturating_add(T::DbWeight::get().writes(9))
	}
	// Storage: Proxy Proxies (r:1 w:0)
	// Storage: Proxy Announcements (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: RandomnessCollectiveFlip RandomMaterial (r:1 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: unknown [0x3a65787472696e7369635f696e646578] (r:1 w:0)
	// Storage: Accounting PostingNumber (r:1 w:1)
	// Storage: Accounting BalanceByLedger (r:2 w:2)
	// Storage: Accounting GlobalLedger (r:2 w:2)
	// Storage: Accounting PostingDetail (r:0 w:2)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 31]`.
	fn announce(a: u32, _p: u32, ) -> Weight {
		// Minimum execution time: 206_468 nanoseconds.
		Weight::from_ref_time(277_969_570)
			// Standard Error: 271_727
			.saturating_add(Weight::from_ref_time(3_058_007).saturating_mul(a.into()))
			.saturating_add(T::DbWeight::get().reads(11))
			.saturating_add(T::DbWeight::get().writes(9))
	}
	// Storage: Proxy Proxies (r:1 w:1)
	// Storage: RandomnessCollectiveFlip RandomMaterial (r:1 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: unknown [0x3a65787472696e7369635f696e646578] (r:1 w:0)
	// Storage: Accounting PostingNumber (r:1 w:1)
	// Storage: Accounting BalanceByLedger (r:2 w:2)
	// Storage: Accounting GlobalLedger (r:2 w:2)
	// Storage: Accounting PostingDetail (r:0 w:2)
	/// The range of component `p` is `[1, 31]`.
	fn add_proxy(p: u32, ) -> Weight {
		// Minimum execution time: 177_492 nanoseconds.
		Weight::from_ref_time(261_078_671)
			// Standard Error: 309_962
			.saturating_add(Weight::from_ref_time(1_103_002).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(9))
			.saturating_add(T::DbWeight::get().writes(8))
	}
	// Storage: Proxy Proxies (r:1 w:1)
	// Storage: RandomnessCollectiveFlip RandomMaterial (r:1 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: unknown [0x3a65787472696e7369635f696e646578] (r:1 w:0)
	// Storage: Accounting PostingNumber (r:1 w:1)
	// Storage: Accounting BalanceByLedger (r:2 w:2)
	// Storage: Accounting GlobalLedger (r:2 w:2)
	// Storage: Accounting PostingDetail (r:0 w:2)
	/// The range of component `p` is `[1, 31]`.
	fn remove_proxy(_p: u32, ) -> Weight {
		// Minimum execution time: 176_667 nanoseconds.
		Weight::from_ref_time(268_261_645)
			.saturating_add(T::DbWeight::get().reads(9))
			.saturating_add(T::DbWeight::get().writes(8))
	}
	// Storage: Proxy Proxies (r:1 w:1)
	// Storage: RandomnessCollectiveFlip RandomMaterial (r:1 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: unknown [0x3a65787472696e7369635f696e646578] (r:1 w:0)
	// Storage: Accounting PostingNumber (r:1 w:1)
	// Storage: Accounting BalanceByLedger (r:2 w:2)
	// Storage: Accounting GlobalLedger (r:2 w:2)
	// Storage: Accounting PostingDetail (r:0 w:2)
	/// The range of component `p` is `[1, 31]`.
	fn remove_proxies(p: u32, ) -> Weight {
		// Minimum execution time: 167_369 nanoseconds.
		Weight::from_ref_time(212_850_623)
			// Standard Error: 247_323
			.saturating_add(Weight::from_ref_time(775_771).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(9))
			.saturating_add(T::DbWeight::get().writes(8))
	}
	// Storage: unknown [0x3a65787472696e7369635f696e646578] (r:1 w:0)
	// Storage: Proxy Proxies (r:1 w:1)
	// Storage: RandomnessCollectiveFlip RandomMaterial (r:1 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: Accounting PostingNumber (r:1 w:1)
	// Storage: Accounting BalanceByLedger (r:2 w:2)
	// Storage: Accounting GlobalLedger (r:2 w:2)
	// Storage: Accounting PostingDetail (r:0 w:2)
	/// The range of component `p` is `[1, 31]`.
	fn create_pure(_p: u32, ) -> Weight {
		// Minimum execution time: 178_504 nanoseconds.
		Weight::from_ref_time(305_103_442)
			.saturating_add(T::DbWeight::get().reads(9))
			.saturating_add(T::DbWeight::get().writes(8))
	}
	// Storage: Proxy Proxies (r:1 w:1)
	// Storage: RandomnessCollectiveFlip RandomMaterial (r:1 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: unknown [0x3a65787472696e7369635f696e646578] (r:1 w:0)
	// Storage: Accounting PostingNumber (r:1 w:1)
	// Storage: Accounting BalanceByLedger (r:2 w:2)
	// Storage: Accounting GlobalLedger (r:2 w:2)
	// Storage: Accounting PostingDetail (r:0 w:2)
	/// The range of component `p` is `[0, 30]`.
	fn kill_pure(p: u32, ) -> Weight {
		// Minimum execution time: 173_661 nanoseconds.
		Weight::from_ref_time(265_702_931)
			// Standard Error: 323_450
			.saturating_add(Weight::from_ref_time(445_711).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(9))
			.saturating_add(T::DbWeight::get().writes(8))
	}
}
