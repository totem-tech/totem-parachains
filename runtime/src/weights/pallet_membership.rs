
//! Autogenerated weights for `pallet_membership`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-02-13, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `ubuntu-s-8vcpu-16gb-fra1-01`, CPU: `DO-Regular`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/totem-parachain-collator
// benchmark
// pallet
// --chain=dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet=pallet_membership
// --extrinsic=*
// --steps=50
// --repeat=20
// --json
// --output=./weights/pallet_membership-new-test.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_membership`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_membership::WeightInfo for WeightInfo<T> {
	// Storage: TechnicalMembership Members (r:1 w:1)
	// Storage: TechnicalCouncil Proposals (r:1 w:0)
	// Storage: TechnicalCouncil Members (r:0 w:1)
	// Storage: TechnicalCouncil Prime (r:0 w:1)
	/// The range of component `m` is `[1, 99]`.
	/// The range of component `m` is `[1, 99]`.
	fn add_member(m: u32, ) -> Weight {
		// Minimum execution time: 54_544 nanoseconds.
		Weight::from_ref_time(65_174_592)
			// Standard Error: 15_302
			.saturating_add(Weight::from_ref_time(58_925).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: TechnicalMembership Members (r:1 w:1)
	// Storage: TechnicalCouncil Proposals (r:1 w:0)
	// Storage: TechnicalMembership Prime (r:1 w:0)
	// Storage: TechnicalCouncil Members (r:0 w:1)
	// Storage: TechnicalCouncil Prime (r:0 w:1)
	/// The range of component `m` is `[2, 100]`.
	/// The range of component `m` is `[2, 100]`.
	fn remove_member(m: u32, ) -> Weight {
		// Minimum execution time: 61_664 nanoseconds.
		Weight::from_ref_time(72_034_696)
			// Standard Error: 14_742
			.saturating_add(Weight::from_ref_time(98_438).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: TechnicalMembership Members (r:1 w:1)
	// Storage: TechnicalCouncil Proposals (r:1 w:0)
	// Storage: TechnicalMembership Prime (r:1 w:0)
	// Storage: TechnicalCouncil Members (r:0 w:1)
	// Storage: TechnicalCouncil Prime (r:0 w:1)
	/// The range of component `m` is `[2, 100]`.
	/// The range of component `m` is `[2, 100]`.
	fn swap_member(_m: u32, ) -> Weight {
		// Minimum execution time: 62_449 nanoseconds.
		Weight::from_ref_time(89_279_742)
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: TechnicalMembership Members (r:1 w:1)
	// Storage: TechnicalCouncil Proposals (r:1 w:0)
	// Storage: TechnicalMembership Prime (r:1 w:0)
	// Storage: TechnicalCouncil Members (r:0 w:1)
	// Storage: TechnicalCouncil Prime (r:0 w:1)
	/// The range of component `m` is `[1, 100]`.
	/// The range of component `m` is `[1, 100]`.
	fn reset_member(m: u32, ) -> Weight {
		// Minimum execution time: 61_039 nanoseconds.
		Weight::from_ref_time(79_430_366)
			// Standard Error: 27_427
			.saturating_add(Weight::from_ref_time(458_960).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: TechnicalMembership Members (r:1 w:1)
	// Storage: TechnicalCouncil Proposals (r:1 w:0)
	// Storage: TechnicalMembership Prime (r:1 w:1)
	// Storage: TechnicalCouncil Members (r:0 w:1)
	// Storage: TechnicalCouncil Prime (r:0 w:1)
	/// The range of component `m` is `[1, 100]`.
	/// The range of component `m` is `[1, 100]`.
	fn change_key(m: u32, ) -> Weight {
		// Minimum execution time: 65_163 nanoseconds.
		Weight::from_ref_time(81_797_758)
			// Standard Error: 21_809
			.saturating_add(Weight::from_ref_time(119_469).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	// Storage: TechnicalMembership Members (r:1 w:0)
	// Storage: TechnicalMembership Prime (r:0 w:1)
	// Storage: TechnicalCouncil Prime (r:0 w:1)
	/// The range of component `m` is `[1, 100]`.
	/// The range of component `m` is `[1, 100]`.
	fn set_prime(m: u32, ) -> Weight {
		// Minimum execution time: 24_891 nanoseconds.
		Weight::from_ref_time(30_719_517)
			// Standard Error: 8_496
			.saturating_add(Weight::from_ref_time(51_384).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: TechnicalMembership Prime (r:0 w:1)
	// Storage: TechnicalCouncil Prime (r:0 w:1)
	/// The range of component `m` is `[1, 100]`.
	/// The range of component `m` is `[1, 100]`.
	fn clear_prime(m: u32, ) -> Weight {
		// Minimum execution time: 14_441 nanoseconds.
		Weight::from_ref_time(21_060_536)
			// Standard Error: 6_219
			.saturating_add(Weight::from_ref_time(18_729).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().writes(2))
	}
}
